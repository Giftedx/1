apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
      annotations:
        linkerd.io/inject: enabled
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 999
        runAsNonRoot: true
      containers:
      - name: redis
        image: redis:alpine
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        args:
        - "--requirepass"
        - "$(REDIS_PASSWORD)"
        # Enhanced Redis configuration
        - "--maxmemory"
        - "400mb"
        - "--maxmemory-policy"
        - "volatile-lfu"
        - "--io-threads"
        - "4"
        - "--active-defrag-cycle-min"
        - "25"
        - "--active-defrag-cycle-max"
        - "75"
        - "--active-defrag-ignore-bytes"
        - "64mb"
        - "--active-defrag-threshold-lower"
        - "10"
        - "--client-output-buffer-limit"
        - "normal 0 0 0"
        - "--lua-time-limit"
        - "5000"
        - "--maxmemory-samples"
        - "10"
        - "--active-defrag-max-scan-fields"
        - "1000"
        - "--io-threads-do-reads"
        - "yes"
        - "--tcp-keepalive"
        - "60"
        - "--lazyfree-lazy-user-del"
        - "yes"
        - "--latency-monitor-threshold"
        - "25"
        - "--activedefrag"
        - "yes"
        - "--rdb-save-incremental-fsync"
        - "yes"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        - name: MALLOC_ARENA_MAX  # Memory optimization
          value: "2"
        resources:
          limits:
            memory: "500Mi"
            cpu: "800m"
          requests:
            memory: "250Mi"
            cpu: "400m"
        ports:
        - containerPort: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        startupProbe:
          tcpSocket:
            port: 6379
          periodSeconds: 10
          failureThreshold: 30
        readinessProbe:
          exec:
            command: ["/bin/sh", "-c", "redis-cli -a $REDIS_PASSWORD ping"]
          initialDelaySeconds: 5
          periodSeconds: 3
        livenessProbe:
          exec:
            command: 
            - /bin/sh
            - -c
            - redis-cli -a $REDIS_PASSWORD ping
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-backup-data